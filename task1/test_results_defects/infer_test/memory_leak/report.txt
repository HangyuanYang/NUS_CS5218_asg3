#0
/home/cs4239/Desktop/cs5218/NUS_CS5218_asg3/task1/01.w_Defects/memory_leak.c:73: error: Memory Leak
  Pulse found a potential memory leak. Memory dynamically allocated at line 72 by call to `memory_leak_003_func_001()`, is not freed after the last access at line 73, column 2.
  71. 	char *str1;
  72. 	memory_leak_003_func_001(strlen(str),&str1);/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */
  73. 	strcpy(str1,str);
       ^
  74. }
  75. 

#1
/home/cs4239/Desktop/cs5218/NUS_CS5218_asg3/task1/01.w_Defects/memory_leak.c:94: error: Memory Leak
  Pulse found a potential memory leak. Memory dynamically allocated at line 94 by call to `malloc`, is not freed after the last access at line 94, column 3.
  92. 	for(i= 0; i<5 ;i++)
  93. 	{
  94. 		(s+i)->buf = (char*)malloc(25* sizeof(char));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */
        ^
  95. 	}
  96. 	strcpy((s+4)->buf,s1);

#2
/home/cs4239/Desktop/cs5218/NUS_CS5218_asg3/task1/01.w_Defects/memory_leak.c:118: error: Memory Leak
  Pulse found a potential memory leak. Memory dynamically allocated at line 112 by call to `malloc`, is not freed after the last access at line 118, column 8.
  116. 		}
  117. 	}
  118.     if(flag < 0)
              ^
  119. 	free(ptr);
  120. }

#3
/home/cs4239/Desktop/cs5218/NUS_CS5218_asg3/task1/01.w_Defects/memory_leak.c:149: error: Memory Leak
  Pulse found a potential memory leak. Memory dynamically allocated at line 143 by call to `malloc`, is not freed after the last access at line 149, column 8.
  147. 		}
  148. 	}
  149.     if(memory_leak_006_func_001(flag) !=0)
              ^
  150. 	free(dptr);
  151. }

#4
/home/cs4239/Desktop/cs5218/NUS_CS5218_asg3/task1/01.w_Defects/memory_leak.c:212: error: Memory Leak
  Pulse found a potential memory leak. Memory dynamically allocated at line 212 by call to `malloc`, is not freed after the last access at line 212, column 2.
  210. {
  211. 	int *ptr=(int*) malloc(5 * sizeof(int));
  212. 	int *p = (int*)malloc(5 * sizeof(int));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */
        ^
  213. 	if(ptr !=NULL)
  214. 	{

#5
/home/cs4239/Desktop/cs5218/NUS_CS5218_asg3/task1/01.w_Defects/memory_leak.c:228: error: Memory Leak
  Pulse found a potential memory leak. Memory dynamically allocated at line 228 by call to `malloc`, is not freed after the last access at line 228, column 2.
  226. {
  227. 	float *ptr=(float*) malloc(5 * sizeof(float));
  228. 	int *p = (int*) malloc(5 * sizeof(int)); /*Tool should detect this line as error*/ /*ERROR:Memory Leakage */
        ^
  229. 	if(ptr !=NULL)
  230. 	{

#6
/home/cs4239/Desktop/cs5218/NUS_CS5218_asg3/task1/01.w_Defects/memory_leak.c:308: error: Memory Leak
  Pulse found a potential memory leak. Memory dynamically allocated at line 308 by call to `malloc`, is not freed after the last access at line 308, column 2.
  306. {
  307. 	memory_leak_0012_uni_001 *u = (memory_leak_0012_uni_001 * )malloc(5*sizeof( memory_leak_0012_uni_001 ));
  308. 	memory_leak_0012_uni_001 *p  = (memory_leak_0012_uni_001 * )malloc(5*sizeof( memory_leak_0012_uni_001 ));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */
        ^
  309. 	p = u;
  310. 

#7
/home/cs4239/Desktop/cs5218/NUS_CS5218_asg3/task1/01.w_Defects/memory_leak.c:349: error: Memory Leak
  Pulse found a potential memory leak. Memory dynamically allocated at line 348 by call to `malloc`, is not freed after the last access at line 349, column 2.
  347. 	}
  348. 	memory_leak_0013_uni_001 *p  = (memory_leak_0013_uni_001 * )malloc(5*sizeof( memory_leak_0013_uni_001 )); /*Tool should detect this line as error*/ /*ERROR:Memory Leakage */
  349. 	p->s1 = (memory_leak_0013_s_001 *) malloc(sizeof(memory_leak_0013_s_001));
        ^
  350. 	
  351. 	if(u!=NULL)

#8
/home/cs4239/Desktop/cs5218/NUS_CS5218_asg3/task1/01.w_Defects/memory_leak.c:402: error: Memory Leak
  Pulse found a potential memory leak. Memory dynamically allocated at line 399 by call to `memory_leak_0015_func_001()`, is not freed after the last access at line 402, column 6.
  400. 	if(str1!=NULL)
  401. 	{
  402. 	    strcpy(str1,str);
            ^
  403. 	}
  404. }

Found 9 issues
  Issue Type(ISSUED_TYPE_ID): #
    Memory Leak(MEMORY_LEAK): 9
